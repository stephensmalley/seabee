---
# You can override the included template(s) by including variable overrides
# SAST customization: https://docs.gitlab.com/ee/user/application_security/sast/#customizing-the-sast-settings
# Secret Detection customization: https://docs.gitlab.com/ee/user/application_security/secret_detection/#customizing-settings
# Dependency Scanning customization: https://docs.gitlab.com/ee/user/application_security/dependency_scanning/#customizing-the-dependency-scanning-settings
# Container Scanning customization: https://docs.gitlab.com/ee/user/application_security/container_scanning/#customizing-the-container-scanning-settings
# Note that environment variables can be set in several places
# See https://docs.gitlab.com/ee/ci/variables/#cicd-variable-precedence

test:
  parallel:
    matrix:
      - OS: ubuntu
        VERSION: [jammy, noble]
      - OS: fedora
        VERSION: [42]
      - OS: rocky
        VERSION: [9]
  tags:
    - ${OS}-${VERSION}
  # Convenience script to print the running kernel for determining if the
  # kernel module compilation step is targeting the right kernel.
  before_script:
    - uname -ar
  script:
    - scripts/update_dependencies.sh
    - make gen-root-key-ci
    - sudo make install-root-key
    - make test-release

rust-clippy:
  # we don't need to run on ubuntu-noble, but this is
  # so we don't have to create a push a container with all
  # our dependencies
  tags:
    - ubuntu-noble
  script:
    - cargo clippy --all-targets --all-features --no-deps

rustfmt:
  image: "${DOCKER_MIRROR}rust:slim"
  script:
    - rustup component add rustfmt
    - cargo fmt -- --check

mega-linter:
  image: "${DOCKER_MIRROR}oxsecurity/megalinter:v7.12.0"
  script:
    - "true"
  variables:
    DEFAULT_WORKSPACE: "$CI_PROJECT_DIR"
